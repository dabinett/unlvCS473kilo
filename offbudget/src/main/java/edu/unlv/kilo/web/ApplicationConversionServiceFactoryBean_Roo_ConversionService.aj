// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package edu.unlv.kilo.web;

import edu.unlv.kilo.domain.ChartingEntity;
import edu.unlv.kilo.domain.TransactionDescription;
import edu.unlv.kilo.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<ChartingEntity, String> ApplicationConversionServiceFactoryBean.getChartingEntityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<edu.unlv.kilo.domain.ChartingEntity, java.lang.String>() {
            public String convert(ChartingEntity chartingEntity) {
                return new StringBuilder().append(chartingEntity.getStartDate()).append(" ").append(chartingEntity.getEndDate()).append(" ").append(chartingEntity.getDay_Interval()).toString();
            }
        };
    }
    
    public Converter<Long, ChartingEntity> ApplicationConversionServiceFactoryBean.getIdToChartingEntityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, edu.unlv.kilo.domain.ChartingEntity>() {
            public edu.unlv.kilo.domain.ChartingEntity convert(java.lang.Long id) {
                return ChartingEntity.findChartingEntity(id);
            }
        };
    }
    
    public Converter<String, ChartingEntity> ApplicationConversionServiceFactoryBean.getStringToChartingEntityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, edu.unlv.kilo.domain.ChartingEntity>() {
            public edu.unlv.kilo.domain.ChartingEntity convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ChartingEntity.class);
            }
        };
    }
    
    public Converter<TransactionDescription, String> ApplicationConversionServiceFactoryBean.getTransactionDescriptionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<edu.unlv.kilo.domain.TransactionDescription, java.lang.String>() {
            public String convert(TransactionDescription transactionDescription) {
                return new StringBuilder().append(transactionDescription.getDescription()).append(" ").append(transactionDescription.getComment()).toString();
            }
        };
    }
    
    public Converter<Long, TransactionDescription> ApplicationConversionServiceFactoryBean.getIdToTransactionDescriptionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, edu.unlv.kilo.domain.TransactionDescription>() {
            public edu.unlv.kilo.domain.TransactionDescription convert(java.lang.Long id) {
                return TransactionDescription.findTransactionDescription(id);
            }
        };
    }
    
    public Converter<String, TransactionDescription> ApplicationConversionServiceFactoryBean.getStringToTransactionDescriptionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, edu.unlv.kilo.domain.TransactionDescription>() {
            public edu.unlv.kilo.domain.TransactionDescription convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TransactionDescription.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getChartingEntityToStringConverter());
        registry.addConverter(getIdToChartingEntityConverter());
        registry.addConverter(getStringToChartingEntityConverter());
        registry.addConverter(getTransactionDescriptionToStringConverter());
        registry.addConverter(getIdToTransactionDescriptionConverter());
        registry.addConverter(getStringToTransactionDescriptionConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
